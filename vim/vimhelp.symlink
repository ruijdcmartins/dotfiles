Vim commands for customizing
  Vim documentation shot cuts, use tab wille typing 
   :help CTRL

  Vim default mappings
   :help index

  List of all currently defined mappings
   :map
   :map-alt-keys
   :map <C-p>

  Check the scriptnames that were loaded
   :scriptnames

  Check the resistors content
   :reg
   :reg "

  Check status of current variable of vim
   :set expandtab?

Vim commands for text editing
  Check this manuals/sheat sheet:
  http://vimdoc.sourceforge.net/vimum.html
  http://bullium.com/support/vim.html
  http://www.keyxl.com/aaa8263/290/VIM-keyboard-shortcuts.htm

  Just a couple of vim commands to don't forget
  vim registers http://www.brianstorti.com/vim-registers/
  https://sanctum.geek.nz/arabesque/advanced-vim-registers/

  <C-o>   => move to back cursor/file
  <C-i>   => move to forward cursor/file
  <C-p,n> => show completion options
  <C-a>   => increment number or alphabetic character at or after the cursor
  <C-x>   => decrement number or alphabetic character at or after the cursor
  <C-x>   => completion options in insert mode

  Move to matching braces
   %

  In visual mode select your text an sort it on with command mode 
   :'<,'>sort

  In insert mode paste text from any register
  the default register is ""
   <C-r> [your chosen register]
   <C-r> "

  Access the expression resistor in insert mode and do some math
   <C-r> =

  Repeat the last macro
   @@

  Preform action on multiple files that are in buffers windows and tabs
   :bufdo %s/pattern/replace/ge | update
   :bufdo execute "normal! @a" | update
   :windo
   :tabdo

  Argument list, this can be used to do a substitution on multiple files
   :args `find . -name '*.txt'`
   :args
   :argdo :%s/bananas/morangos/g | w

  Foldind commands
   zc individual close
   zo individual open
   za individual toggle
   zm folds all ; more folding
   zr unfolds all ; reduce fold 
   zf manual fold

  Use Very Magic for the real regex
  http://vimregex.com/
   :help magic
   /\v
   :s/\v(CapturingGroup1|orSomethingElse)moreRegex stuf/NewStuf \1/

  Afther a search you can do a subtitution just by doing
   :s//NewStuf/
